//-- Mixin for Responsive Design

//1. Min-width (more then value) or max-width (less then value): Use the value from the $breakpoints list or provide any other value.
//2. Max-width (less then value): In additional, you should add $type:max after the value.
//3. Min-width - max-width (from "a" to "b") - use both values from the $breakpoints list or provide any other values.
//4. Use "desktop" or "mobile" inside of the mixin for the desktop or mobile version.
//5. Use the values from the $orientations list for portrait, landscape or print views.

//------------------------------------------------------

@mixin respond-to($value, $secondValue: null, $type: min) {

  $width: $value;

  @if map_has_key($breakpoints, $value) {
    $width: map-get($breakpoints, $value);
  }

  @if map_has_key($orientations, $width) {
    $width: map-get($orientations, $width);

    @media #{$width} {
      @content;
    }
  }

  @else if($width == desktop) {
    @media screen and ($media-min: map-get($breakpoints, small)) {
      @content;
    }
  }

  @else if ($width == mobile) {
    @media screen and ($media-max: map-get($breakpoints, small) - 1px) {
      @content;
    }
  }

  @else if ($width == printAndMobile) {
    @media screen and ($media-max: map-get($breakpoints, small) - 1px) {
      @content;
    }

    @media print {
      @content;
    }
  }

  @else if ($secondValue) {
    $width-second: $secondValue;

    @if map_has_key($breakpoints, $secondValue) {
      $width-second: map-get($breakpoints, $secondValue);
    }

    @if $width-second {
      @media screen and ($media-min: $width) and ($media-max: $width-second - 1px) {
        @content;
      }
    }
  }

  @else {

    @if $type == max {
      $width: $width - 1px;
    }

    @media screen and (#{$type}-width: $width) {
      @content;
    }
  }
}
